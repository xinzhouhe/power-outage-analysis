{"version":3,"file":"464.primer_spec_plugin.min.js","mappings":"gFAMA,IAAIA,EAA0B,WAC1B,SAASA,IAELC,KAAKC,WAAa,GA4HtB,OAnHAF,EAASG,UAAUC,UAAY,SAAUC,GAErC,OAAKA,EAIEJ,KAAKK,OAAOD,GAASE,IAAIN,KAAKO,cAAcC,KAAKR,OAAOS,KAAK,IAHzDL,GAUfL,EAASG,UAAUK,cAAgB,SAAUG,GAMzC,IAAIC,EAAQ,uDAAuDC,KAAKF,GAExE,IAAKC,EACD,OAAOD,EAGX,IAAIG,EAAOF,EAAM,GAAKA,EAAM,GAAGG,UAAU,GAEzC,IAAuC,IAAnCd,KAAKC,WAAWc,QAAQF,GACxB,OAAOH,EAGX,GAAI,QAAQM,KAAKH,GACb,OAAOH,EAGX,IAAIO,EAAaJ,IAASA,EAAKK,eAAiBL,EAAKM,OAAS,EAC1DC,EAAmBP,EAAK,GAAGK,cAE/B,IAA2C,IAAvC,QAAQH,QAAQK,GAA0B,CAE1C,IAAIC,EAAWR,EAAKA,EAAKM,OAAS,GAC9BG,EAAuB,MAAbD,GAAiC,MAAbA,EAAoB,KAAO,MAC7DR,GAAQI,EAAYK,EAAOJ,cAAgBI,MAE1C,CAED,IAAIC,EAAgBvB,KAAKwB,mBAAmBX,GAE5C,IAAuB,IAAnBU,EAAsB,CAGtB,IAAIE,GAAkBR,GAAaJ,EAAK,KAAOO,EAC3CM,EAAab,EAAKC,UAAU,EAAGS,GAE/BE,IACAC,EAAaA,EAAWC,eAG5B,IAAIC,EAAsBf,EAAKgB,QAAQH,EAAWP,QAAQD,gBAAkBQ,EAAWR,cACnFY,EAA0BjB,EAAKgB,QAAQ,GAAGX,gBAAkBQ,EAAW,GAAGR,cAC1Ea,EAAUH,GAAsBE,EAA0B,IAAM,GACpEjB,EAAOA,EAAKC,UAAUY,EAAWP,QAAUY,EAASL,GAAcT,EAAY,KAAO,MAEjFQ,IACAZ,EAAOA,EAAK,GAAGK,cAAgBL,EAAKC,UAAU,KAK1D,OAAOH,EAAM,GAAKE,EAAOF,EAAM,IAOnCZ,EAASG,UAAUG,OAAS,SAAU2B,GAMlC,IAJA,IAAIC,EAAK,0BACLC,EAAY,GACZC,EAAgB,IAEP,CACT,IAAIC,EAASH,EAAGrB,KAAKoB,GAErB,GAAe,OAAXI,EAAiB,CAGbJ,GAAOA,EAAIb,OAASgB,GACpBD,EAAUG,KAAKL,EAAIlB,UAAUqB,IAEjC,MAGJ,IAAItB,EAAOmB,EAAIlB,UAAUqB,EAAeC,EAAOE,OAC/CJ,EAAUG,KAAKxB,GACf,IAAI0B,EAAYP,EAAIlB,UAAUsB,EAAOE,MAAOL,EAAGO,WAC/CN,EAAUG,KAAKE,GACfJ,EAAgBF,EAAGO,UAGvB,OAAON,GAOXnC,EAASG,UAAUsB,mBAAqB,SAAUX,GAE9C,IAAIuB,EAAS,YAAYxB,KAAKC,GAC1ByB,EAAQF,EAAO,GAAGK,OAAO,aAC7B,OAAmB,IAAXH,GAAiB,EAAIF,EAAO,GAAGjB,OAASmB,GAG7CvC,EA/HkB,GAkI7B2C,EAAQ,EAAU3C,G,kECpGX,MAAM4C,EAAa,CACtBC,QAAS,eACTC,MAAO,OACPC,GAAI,KACJC,GAAI,IACJC,IAAK,KACLC,IAAK,KACLC,MAAO,QACPC,OAAQ,QACRC,OAAQ,QACRC,QAAS,UACTC,IAAK,OACLC,KAAM,OACNC,MAAO,QACPC,KAAM,UACNC,IAAK,SACLC,MAAO,OACPC,SAAU,UACVC,WAAY,YACZC,QAAS,UACTC,OAAQ,cACRC,KAAM,OACNC,IAAK,SACLC,MAAO,cACPC,MAAO,QACPC,SAAU,YACVC,KAAM,YACNC,QAAS,OACTC,UAAW,SACXC,KAAM,yBACNC,WAAY,WAEZC,IAAK,SACLC,OAAQ,WACRC,QAAS,YACTC,KAAM,SACNC,SAAU,OACVC,SAAU,YACVC,IAAK,YACLC,OAAQ,MACRC,IAAK,OACLC,KAAM,OACNC,IAAK,MACLC,OAAQ,QACRC,QAAS,SACTC,GAAI,OACJC,KAAM,aACNC,MAAO,sBACPC,MAAO,SACPC,KAAM,QACNC,OAAQ,WACRC,SAAU,cACVC,KAAM,OACNC,MAAO,cACPC,MAAO,OACPC,IAAK,OACLC,GAAI,OACJC,MAAO,cACPC,EAAG,KACH,MAAO,OACP,MAAO,OACPC,SAAU,kBACVC,QAAS,OACTC,GAAI,KACJC,OAAQ,OACR,QAAS,SACT,QAAS,SACT,OAAQ,OACR,OAAQ,OACRC,KAAM,OACNC,KAAM,WACNC,KAAM,OACNC,OAAQ,SACRC,KAAM,OACNC,OAAQ,qBACRC,KAAM,OACNC,IAAK,MACLC,OAAQ,iBACRC,IAAK,SACLC,IAAK,SACLC,QAAS,UACTC,MAAO,YACPC,MAAO,OACPC,GAAI,KACJC,MAAO,OACPC,GAAI,MACJC,IAAK,MACLC,GAAI,KACJC,IAAK,mBACLC,IAAK,oBACLC,KAAM,OACNC,KAAM,YACNC,OAAQ,aACRC,OAAQ,aACRC,OAAQ,wBACRC,UAAW,OACXC,OAAQ,OACRC,QAAS,UACTC,OAAQ,SACRC,SAAU,MACVC,UAAW,MACXC,SAAU,QACVC,WAAY,SACZC,MAAO,YACPC,KAAM,uBACNC,IAAK,MACLC,QAAS,qBACTC,SAAU,QACVC,MAAO,OACPC,MAAO,OACPC,QAAS,SACTC,MAAO,OACPC,OAAQ,iBACRC,MAAO,OACPC,WAAY,QACZ,SAAU,UAEVC,MAAO,WACPC,KAAM,MAENC,GAAI,KACJC,SAAU,WACVC,SAAU,QACVC,IAAK,KACLC,MAAO,OACPC,GAAI,iBAGJC,KAAM,OACNC,KAAM,OACNC,IAAK,MACLC,KAAM,MACNC,IAAK,MACLC,IAAK,KACL,SAAU,SACV,SAAU,SACV,SAAU,KACV,SAAU,KACVC,KAAM,MACNC,IAAK,MAELC,OAAQ,cACRC,OAAQ,UACRC,MAAO,YACPC,OAAQ,YACRC,SAAU,YACVC,UAAW,aACXC,MAAO,UACPC,MAAO,mBAEPC,KAAM,sBACNC,KAAM,UACNC,OAAQ,WACRC,UAAW,cACXC,QAAS,YACTC,SAAU,aACVC,SAAU,aACVC,OAAQ,iBACRC,OAAQ,SACRC,QAAS,WACTC,UAAW,cACXC,SAAU,aACVC,SAAU,aACVC,MAAO,QACPC,KAAM,YACNC,MAAO,YACPC,MAAO,qBACPC,SAAU,eAEVC,KAAM,YACNC,QAAS,kBACTC,KAAM,SACNC,QAAS,cACTC,aAAc,gBACdC,QAAS,aAEb,SAASC,EAAc1L,GACnB,MAAM2L,EAAa7J,EAAW9B,EAAKc,eACnC,YAAmB8K,IAAfD,EACO3L,EAIf,SAAmB6L,EAAOC,GAEtB,GAAqB,IAAjBD,EAAMvL,QAAiC,IAAjBwL,EAAMxL,OAC5B,OAAOwL,EAEX,GAAID,IAAUA,EAAMxL,cAChB,OAAOyL,EAAMzL,cAEjB,GAAIwL,IAAUA,EAAM/K,cAChB,OAAOgL,EAAMhL,cAEjB,MAAMiL,EAAYF,EAAMG,MAAM,EAAG,GAC3BC,EAAaJ,EAAMG,MAAM,GAC/B,OAAID,IAAcA,EAAU1L,eACxB4L,IAAeA,EAAWnL,cACnBgL,EAAME,MAAM,EAAG,GAAG3L,cAAgByL,EAAME,MAAM,GAAGlL,cAGrDgL,EArBAI,CAAUlM,EAAM2L,GAuB3B,SAASQ,EAASC,GACd,OAAyC,IAArCA,EAAUxK,OAAO,eCxNzB,MAAMyK,EAAY,CACd,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,EAAU,IACV,EAAU,IACV,EAAU,IACV,EAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACVC,EAAG,IACHC,EAAG,KACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACH,IAAU,IACVC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACH1I,EAAG,IACH2I,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACH,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,KAEd,IAAK,MAAMpJ,KAAK8G,EACZA,EAAUA,EAAU9G,IAAMA,EC/E9B,IAAIqJ,EAAkB,UACPC,eAAeC,KAS9B,WACI,MAAMC,EAAmB,0CAEzB,GAD+BC,SAASC,cAAc,IAAIF,KAEtD,OAEJ,MAAMG,EAAgCF,SAASC,cAAc,gCACvDE,EAAuBD,GAA+BD,cAAc,uDAC1E,IAAKE,IAAyBD,EAE1B,YADAE,QAAQC,KAAK,oHAGjB,MAAMC,EAAiBH,EAAqBI,WAAU,GACtDD,EAAeE,GAAKT,EACpBO,EAAeG,MAAMC,aAAe,MACpC,MAAMC,EAAeL,EAAeL,cAAc,YAClDU,GAAcC,UAAUC,OAAO,UAC/BF,GAAcC,UAAUE,IAAI,eAC5BZ,EAA8Ba,QAAQT,GACZA,EAAeL,cAAc,WACpCe,iBAAiB,SAAS,IAAMC,MA5BnDC,GAgEKlB,SAASC,cAAc,IAAIkB,MAC5BnB,SAASoB,KAAKC,YAAY,IAAS,QAAS,KACxC,qDACA,4CACA,IACA,oEACA,mBACA,IACA,0EACA,iBACA,IACA,aACA,kCACA,IACA,mDACA,yDACA,+BACA,IACA,qEACA,gCACA,MAsCZ,WACI,IAAKC,EAAsB,CACvB,MAAMC,EAAcvB,SAASC,cAAc,wCAC3CqB,EAAuBC,GAAaC,WAAa,MA3HrDC,GAsGKC,IAGDC,OAAOX,iBAAiB,SAAUpG,IAC9B,MAAMgH,EAAShH,GAAOgH,OAClBA,GACyG,MAAzGA,EAAOC,QAAQ,wFACf7B,SAAS8B,KAAKC,SAASH,IACvBX,EAAsB,CAAEe,WAAW,OAG3CN,GAAwB,GArFhC,MAAMO,EAAoB,2CAC1B,SAAShB,EAAsBiB,GAC3B,MAAMC,EAAkBnC,SAASC,cAAc,IAAIgC,KAC/CE,EACAA,EAAgBtB,SAEH,MAARqB,GAAiBA,EAAKF,YACZhC,SAASC,cAAc,8BAC9BoB,YAAY,IAAS,MAAO,CAAEb,GAAIyB,EAAmBG,MAAO,4BAA6B3B,MAAO,qCACpG,IAAS,MAAO,CAAE2B,MAAO,8EACrB,IAAS,SAAU,CAAEA,MAAO,mDAAoD3B,MAAO,8CAA+C4B,QAAS,IAAMpB,KACjJ,IAAS,IAAK,CAAEmB,MAAO,kBAC3B,IAAS,KAAM,CAAEA,MAAO,QAAU,kCAClC,IAAS,IAAK,KAAM,6DACpB,IAAS,MAAO,CAAE3B,MAAO,wBACrB,IAAS,UAAW,CAAE2B,MAAO,yDACzB,IAAS,UAAW,CAAEA,MAAO,MAAO,gBAAiB,QACjD,IAAS,OAAQ,CAAE5B,GAAI,GAAGyB,qBAAuC,mBACjE,IAAS,MAAO,CAAEG,MAAO,oBAC7B,IAAS,KAAM,CAAEA,MAAO,kCACpB,IAAS,KAAM,KAAME,EAAkB,UAAW,YAClD,IAAS,KAAM,KAAMA,EAAkB,YAAa,cACpD,IAAS,KAAM,KAAMA,EAAkB,SAAU,WACjD,IAAS,KAAM,KAAMA,EAAkB,cAAe,sBAC1EC,EAAmB3C,IAG3B,SAAS0C,EAAkB9B,EAAIgC,GAC3B,OAAQ,IAAS,SAAU,CAAEhC,GAAI,GAAGyB,KAAqBzB,IAAM4B,MAAO,6BAA8BC,QAAS,KACrGE,EAAmB/B,KAClBgC,GAEb,MAAMrB,EAAqB,qDAyB3B,SAASoB,EAAmBE,GACpB7C,IAAoB6C,IACpB7C,EAAkB6C,EAuC1B5C,eAAkC4C,GAC9B,MAAMC,EAAqB,CACvBnS,QAASoS,EACT,YAAaC,EACbC,OAAQC,EACR,cAAeC,GAEfzB,GAAwBmB,KAAcC,GAK9C,SAA4BM,GACxB,MAAMzB,EAAcvB,SAASC,cAAc,wCACtCsB,IAGLA,EAAYC,UAAYwB,GARpBC,CAUR,SAAmBC,EAAiBC,GAChC,MAAMC,EAAuBC,IACzB,MAAMC,EAAgB,IAAID,EAASE,YAAY9S,KAAK+S,IAChD,GAAIA,EAAKC,UAAYC,KAAKC,UAEtB,OADAH,EAAKI,YAAcT,EAAWK,EAAKI,aAC5BJ,EAEN,GAAIA,EAAKC,WAAaC,KAAKG,aAAc,CAC1C,GAAIL,EAAK5C,UAAUmB,SAAS,2BACxByB,EAAK5C,UAAUmB,SAAS,qCACxByB,EAAK5C,UAAUmB,SAAS,8BACxB,OAAOyB,EAEX,MAAMM,EAAUN,EAAKjD,WAAU,GAE/B,OADA6C,EAAoBU,GACbA,EAEX,OAAON,KAEXH,EAAS7B,UAAY,GACrB6B,EAAS5R,UAAU6R,IAEjBS,GAAe,IAAIC,WAAYC,gBAAgBf,EAAiB,aAAapB,KAEnF,OADAsB,EAAoBW,GACbA,EAAavC,UAnCO,CAAUF,QAA4BoB,EAAmBD,OA9ChFyB,CAAmBzB,IAEvB,MAAM0B,EAAsBnE,SAASC,cAAc,IAAIgC,qBACjDmC,EAAuBpE,SAASC,cAAc,IAAIgC,KAAqBrC,KACzEuE,GAAuBC,IACvBD,EAAoB3C,UAAY4C,EAAqB5C,WAGzDxB,SACKC,cAAc,+DACboE,gBAAgB,QAE1B,IAAI3C,GAAwB,EAmBxBJ,EAAuB,KAuD3B,SAASqB,IACL,OAAO2B,QAAQC,SAASC,GAASA,IAErC3E,eAAe+C,IACX,MAAMO,EAAa,IAAI,IACvB,OAAQqB,GAAUA,EAAOrB,EAAW7S,UAAUkU,GAAQA,EAE1D3E,eAAeiD,IACX,OAAQ0B,GAAUA,EFqDf,SAAmBA,GACtB,IAAIC,EAAiB,GAEjBzT,EAAO,GACX,IAAK,IAAIuF,EAAI,EAAGA,EAAIiO,EAAKlT,OAAQiF,GAAK,EAAG,CACrC,MAAM6G,EAAYoH,EAAKjO,GAGnB4G,EAASC,GACTpM,GAAQoM,GAKI,IAARpM,IAGAyT,GADmB/H,EAAc1L,GAEjCA,EAAO,IAEXyT,GAAkBrH,GAO1B,MAFa,KAATpM,IACAyT,GAAkB/H,EAAc1L,IAC7ByT,EEhFkB,CAAqBD,GAAQA,EAE1D3E,eAAekD,IACX,OAAQyB,GAAUA,EDtLf,SAA8BE,GACjC,MAAMC,EAAOD,EAAQpT,OAAS,EAGxBiB,EAAS,IAAIqS,MAAMF,EAAQpT,QACjC,IAAK,IAAIiF,EAAIoO,EAAMpO,GAAK,IAAKA,EAAG,CAC5B,MAAMqI,EAAI8F,EAAQG,OAAOtO,GACnBgJ,EAAIlC,EAAUuB,GACpBrM,EAAOoS,EAAOpO,GAAUqG,MAAL2C,EAAiBA,EAAIX,EAE5C,OAAOrM,EAAO3B,KAAK,IC4KMkU,CAAqBN,GAAQA","sources":["webpack:///../node_modules/pig-latinizer/lib/pigLatin.js","webpack:///./conditional_plugins/plugins/utils/pirate_speak.ts","webpack:///./conditional_plugins/plugins/utils/upside_down.ts","webpack:///./conditional_plugins/plugins/april_fools_languages.plugin.tsx"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * Translates English to Pig Latin.\n */\nvar PigLatin = /** @class */ (function () {\n    function PigLatin() {\n        /** Words which should be excluded from translation. Case-sensitive. */\n        this.exclusions = [];\n    }\n\n    /**\n     * Translates an English string, containing an arbitrary amount of text, to Pig Latin.\n     * Punctuation and whitespace are preserved, including blank lines.\n     *\n     * @param english The English string to translate.\n     */\n    PigLatin.prototype.translate = function (english) {\n\n        if (!english) {\n            return english;\n        }\n\n        return this._split(english).map(this._translateOne.bind(this)).join(\"\");\n    };\n\n    /**\n     * Translates a single fragment (word or separator) to Pig Latin.\n     * @param fragment The word to translate or ignore, or separator to ignore.\n     */\n    PigLatin.prototype._translateOne = function (fragment) {\n        // split into leading/trailing punctuation and the word itself;\n        // part 1 = punctuation, or empty string\n        // part 2 = the word up to any single apostrophe (if present)\n        // part 3 = apostrophe & word characters following it, or empty string\n        // part 4 = punctuation (including apostrophe if no word characters follow it), or empty string\n        var parts = /^([\\W_]*)([^\\W_]+)(['\\u2019\\u02bc][^\\W_]+|)([\\W_]*)$/.exec(fragment);\n\n        if (!parts) {\n            return fragment; // we can't translate this non-word (it may be a separator)\n        }\n\n        var word = parts[2] + parts[3].substring(1);\n\n        if (this.exclusions.indexOf(word) !== -1) {\n            return fragment;\n        }\n\n        if (/[0-9]/.test(word)) {\n            return fragment; // don't translate words which contain a digit\n        }\n\n        var isAllCaps = (word === word.toUpperCase() && word.length > 1);\n        var firstLetterUpped = word[0].toUpperCase();\n\n        if (\"AEIOU\".indexOf(firstLetterUpped) !== -1) {\n            // begins with vowel; append \"yay\", but without doubling up a trailing \"y\"\n            var lastChar = word[word.length - 1];\n            var append = (lastChar === \"y\" || lastChar === \"Y\") ? \"ay\" : \"yay\";\n            word += isAllCaps ? append.toUpperCase() : append;\n        }\n        else {\n            // begins with a consonant; find the first vowel (including \"y\", except at the start of the word)\n            var firstVowelPos = this._indexOfFirstVowel(word);\n\n            if (firstVowelPos !== -1) {\n                // (don't translate a word without vowels; maybe it's an acronym?)\n                // move leading consonants to the end, hyphenating if we're doubling them up, and append \"ay\"\n                var isCapitalized = (!isAllCaps && word[0] === firstLetterUpped);\n                var consonants = word.substring(0, firstVowelPos);\n\n                if (isCapitalized) {\n                    consonants = consonants.toLowerCase();\n                }\n\n                var consonantsRepeated = (word.substr(-consonants.length).toUpperCase() === consonants.toUpperCase());\n                var firstConsonantRepeated = (word.substr(-1).toUpperCase() === consonants[0].toUpperCase());\n                var hyphen = (consonantsRepeated || firstConsonantRepeated) ? \"-\" : \"\";\n                word = word.substring(consonants.length) + hyphen + consonants + (isAllCaps ? \"AY\" : \"ay\");\n\n                if (isCapitalized) {\n                    word = word[0].toUpperCase() + word.substring(1);\n                }\n            }\n        }\n\n        return parts[1] + word + parts[4]; // restore any leading and/or trailing punctuation\n    };\n\n    /**\n     * Splits a string into an array of fragments, i.e. alternating words and separators.\n     * @param str The string to split.\n     */\n    PigLatin.prototype._split = function (str) {\n        // word separator = any whitespace, slash, underscore, Unicode dashes, regular dash\n        var re = /[\\s/_\\u2010-\\u2015-]+/gm;\n        var fragments = [];\n        var lastLastIndex = 0;\n\n        while (true) {\n            var result = re.exec(str);\n\n            if (result === null) {\n                // no more separators, but there might be one more word\n\n                if (str && str.length > lastLastIndex) {\n                    fragments.push(str.substring(lastLastIndex));\n                }\n                break;\n            }\n\n            var word = str.substring(lastLastIndex, result.index);\n            fragments.push(word);\n            var separator = str.substring(result.index, re.lastIndex);\n            fragments.push(separator);\n            lastLastIndex = re.lastIndex;\n        }\n\n        return fragments;\n    };\n\n    /**\n     * Gets the index of the first vowel in the given word, or -1 if it contains no vowels.\n     * @param word The word in which to find a vowel.\n     */\n    PigLatin.prototype._indexOfFirstVowel = function (word) {\n        // split off any leading Ys (result[1]), then search whatever's left, if anything (result[2]), for the first vowel\n        var result = /(y*)(.*)/i.exec(word);\n        var index = result[2].search(/[aeiouy]/i);\n        return (index === -1) ? -1 : result[1].length + index;\n    };\n\n    return PigLatin;\n}());\n\nexports.default = PigLatin;\n","/**\n * The `pirate-speak` software was originally written by\n * Michael Hadley <michaelwesthadley@gmail.com>.\n * https://github.com/mikewesthad/pirate-speak\n *\n * The software was modified for use with Primer Spec.\n *\n * The original `pirate-speak` package was licensed under the MIT License,\n * included below:\n *\n *******************\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 Michael Hadley\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *******************\n */\nexport const dictionary = {\n    address: \"port o' call\",\n    admin: 'helm',\n    am: 'be',\n    an: 'a',\n    and: \"n'\",\n    are: 'be',\n    award: 'prize',\n    before: 'afore',\n    belief: 'creed',\n    between: 'betwixt',\n    big: 'vast',\n    bill: 'coin',\n    bills: 'coins',\n    boss: 'admiral',\n    box: 'barrel',\n    buddy: 'mate',\n    business: 'company',\n    businesses: 'companies',\n    calling: \"callin'\",\n    canada: 'Great North',\n    cash: 'coin',\n    cat: 'parrot',\n    cheat: 'hornswaggle',\n    comes: 'hails',\n    comments: 'yer words',\n    cool: 'shipshape',\n    country: 'land',\n    dashboard: 'shanty',\n    dead: \"in Davy Jones's Locker\",\n    disconnect: 'keelhaul',\n    // do: \"d'\",\n    dog: 'parrot',\n    dollar: 'doubloon',\n    dollars: 'doubloons',\n    dude: 'pirate',\n    employee: 'crew',\n    everyone: 'all hands',\n    eye: 'eye-patch',\n    family: 'kin',\n    fee: 'debt',\n    food: 'grub',\n    for: 'fer',\n    friend: 'matey',\n    friends: 'mateys',\n    go: 'sail',\n    good: 'jolly good',\n    grave: \"Davy Jones's Locker\",\n    group: 'maties',\n    haha: 'yo ho',\n    hahaha: 'yo ho ho',\n    hahahaha: 'yo ho ho ho',\n    hand: 'hook',\n    happy: 'grog-filled',\n    hello: 'ahoy',\n    hey: 'ahoy',\n    hi: 'ahoy',\n    hotel: 'fleebag inn',\n    i: 'me',\n    \"i'm\": 'i be',\n    'i’m': 'i be',\n    internet: \"series o' tubes\",\n    invalid: 'sunk',\n    is: 'be',\n    island: 'isle',\n    \"isn't\": 'be not',\n    'isn’t': 'be not',\n    \"it's\": \"'tis\",\n    'it’s': \"'tis\",\n    jail: 'brig',\n    kill: 'keelhaul',\n    king: 'king',\n    ladies: 'lasses',\n    lady: 'lass',\n    lawyer: 'scurvy land lubber',\n    left: 'port',\n    leg: 'peg',\n    logout: 'walk the plank',\n    lol: 'blimey',\n    man: 'pirate',\n    manager: 'admiral',\n    money: 'doubloons',\n    month: 'moon',\n    my: 'me',\n    never: 'nary',\n    no: 'nay',\n    not: 'nay',\n    of: \"o'\",\n    old: 'barnacle-covered',\n    omg: 'shiver me timbers',\n    over: \"o'er\",\n    page: 'parchment',\n    people: 'scallywags',\n    person: 'scurvy dog',\n    posted: 'tacked to the yardarm',\n    president: 'king',\n    prison: 'brig',\n    quickly: 'smartly',\n    really: 'verily',\n    relative: 'kin',\n    relatives: 'kin',\n    religion: 'creed',\n    restaurant: 'galley',\n    right: 'starboard',\n    rotf: \"rollin' on the decks\",\n    say: 'cry',\n    seconds: \"ticks o' tha clock\",\n    shipping: 'cargo',\n    small: 'puny',\n    snack: 'grub',\n    soldier: 'sailor',\n    sorry: 'yarr',\n    spouse: \"ball 'n' chain\",\n    state: 'land',\n    supervisor: \"Cap'n\",\n    \"that's\": 'that be',\n    // the: 'thar',\n    thief: 'swoggler',\n    them: \"'em\",\n    // this: 'dis',\n    to: \"t'\",\n    together: \"t'gether\",\n    treasure: 'booty',\n    was: 'be',\n    water: 'grog',\n    we: 'our jolly crew',\n    // \"we're\": \"we's\",\n    // \"we’re\": \"we's\",\n    with: \"wit'\",\n    work: 'duty',\n    yah: 'aye',\n    yeah: 'aye',\n    yes: 'aye',\n    you: 'ye',\n    \"you're\": 'you be',\n    'you’re': 'you be',\n    \"you've\": 'ye',\n    'you’ve': 'ye',\n    your: 'yer',\n    yup: 'aye',\n    // These translations were inspired by Facebook Pirate translations.\n    around: 'roundabouts',\n    cancel: 'retreat',\n    event: 'grog fest',\n    except: \"exceptin'\",\n    jarnuary: 'januarrry',\n    feburuary: 'februarrry',\n    march: 'marrrch',\n    april: \"Month o' Showers\",\n    // may: \"Month o' May\",\n    june: \"Merry Month o' June\",\n    july: 'jul-aye',\n    august: 'arrrgust',\n    september: 'Septembarrr',\n    october: 'Octobarrr',\n    november: 'Novembarrr',\n    december: 'Decembarrr',\n    sunday: \"Day o' the Sun\",\n    monday: 'munday',\n    tuesday: \"toos'day\",\n    wednesday: \"Ondin's day\",\n    thursday: 'tharrrsday',\n    saturday: 'satarrrday',\n    today: \"t'day\",\n    post: \"scrawlin'\",\n    tweet: \"scrawlin'\",\n    video: 'bewitched portrait',\n    location: \"port o' call\",\n    // Other thoughts\n    file: 'parchment',\n    browser: \"bewtch'd portal\",\n    code: 'spells',\n    program: 'magic spell',\n    dependencies: 'dependen-seas',\n    starter: 'starrrter',\n};\nfunction translateWord(word) {\n    const pirateWord = dictionary[word.toLowerCase()];\n    if (pirateWord === undefined)\n        return word;\n    return applyCase(word, pirateWord);\n}\n// Take the case from wordA and apply it to wordB\nfunction applyCase(wordA, wordB) {\n    // Exception to avoid words like \"I\" being converted to \"ME\"\n    if (wordA.length === 1 && wordB.length !== 1)\n        return wordB;\n    // Uppercase\n    if (wordA === wordA.toUpperCase())\n        return wordB.toUpperCase();\n    // Lowercase\n    if (wordA === wordA.toLowerCase())\n        return wordB.toLowerCase();\n    // Capitialized\n    const firstChar = wordA.slice(0, 1);\n    const otherChars = wordA.slice(1);\n    if (firstChar === firstChar.toUpperCase() &&\n        otherChars === otherChars.toLowerCase()) {\n        return wordB.slice(0, 1).toUpperCase() + wordB.slice(1).toLowerCase();\n    }\n    // Other cases\n    return wordB;\n}\nfunction isLetter(character) {\n    if (character.search(/[a-zA-Z'’-]/) === -1)\n        return false;\n    return true;\n}\nexport function translate(text) {\n    let translatedText = '';\n    // Loop through the text, one character at a time.\n    let word = '';\n    for (let i = 0; i < text.length; i += 1) {\n        const character = text[i];\n        // If the char is a letter, then we are in the middle of a word, so we\n        // should accumulate the letter into the word variable\n        if (isLetter(character)) {\n            word += character;\n        }\n        // If the char is not a letter, then we hit the end of a word, so we\n        // should translate the current word and add it to the translation\n        else {\n            if (word != '') {\n                // If we've just finished a word, translate it\n                const pirateWord = translateWord(word);\n                translatedText += pirateWord;\n                word = '';\n            }\n            translatedText += character; // Add the non-letter character\n        }\n    }\n    // If we ended the loop before translating a word, then translate the final\n    // word and add it to the translation.\n    if (word !== '')\n        translatedText += translateWord(word);\n    return translatedText;\n}\n","/**\n * This module is adapted from the Upside Down Converter on fileformat.info:\n * https://www.fileformat.info/convert/text/upside-down-map.htm\n *\n * Which is itself derived from revfad.com (by David Faden):\n * https://www.revfad.com/flip.html\n *\n * This work, and the original work, is licensed under a Creative Commons\n * Attribution-Share Alike 3.0 Unported License.\n * http://creativecommons.org/licenses/by-sa/3.0/\n *\n */\nexport function flipStringUpsideDown(aString) {\n    const last = aString.length - 1;\n    //Thanks to Brook Monroe for the\n    //suggestion to use Array.join\n    const result = new Array(aString.length);\n    for (let i = last; i >= 0; --i) {\n        const c = aString.charAt(i);\n        const r = flipTable[c];\n        result[last - i] = r != undefined ? r : c;\n    }\n    return result.join('');\n}\nconst flipTable = {\n    '\\u0021': '\\u00A1',\n    '\\u0022': '\\u201E',\n    '\\u0026': '\\u214B',\n    '\\u0027': '\\u002C',\n    '\\u0028': '\\u0029',\n    '\\u002E': '\\u02D9',\n    '\\u0033': '\\u0190',\n    '\\u0034': '\\u152D',\n    '\\u0036': '\\u0039',\n    '\\u0037': '\\u2C62',\n    '\\u003B': '\\u061B',\n    '\\u003C': '\\u003E',\n    '\\u003F': '\\u00BF',\n    A: '\\u2200',\n    B: '\\u10412',\n    C: '\\u2183',\n    D: '\\u25D6',\n    E: '\\u018E',\n    F: '\\u2132',\n    G: '\\u2141',\n    J: '\\u017F',\n    K: '\\u22CA',\n    L: '\\u2142',\n    M: '\\u0057',\n    N: '\\u1D0E',\n    P: '\\u0500',\n    Q: '\\u038C',\n    R: '\\u1D1A',\n    T: '\\u22A5',\n    U: '\\u2229',\n    V: '\\u1D27',\n    Y: '\\u2144',\n    '\\u005B': '\\u005D',\n    _: '\\u203E',\n    a: '\\u0250',\n    b: '\\u0071',\n    c: '\\u0254',\n    d: '\\u0070',\n    e: '\\u01DD',\n    f: '\\u025F',\n    g: '\\u0183',\n    h: '\\u0265',\n    i: '\\u0131',\n    j: '\\u027E',\n    k: '\\u029E',\n    l: '\\u0283',\n    m: '\\u026F',\n    n: '\\u0075',\n    r: '\\u0279',\n    t: '\\u0287',\n    v: '\\u028C',\n    w: '\\u028D',\n    y: '\\u028E',\n    '\\u007B': '\\u007D',\n    '\\u203F': '\\u2040',\n    '\\u2045': '\\u2046',\n    '\\u2234': '\\u2235',\n};\nfor (const i in flipTable) {\n    flipTable[flipTable[i]] = i;\n}\n","/** @jsx JSXDom.h */\nimport * as JSXDom from 'jsx-dom';\nimport PigLatinizer from 'pig-latinizer';\nimport { translate as pirateSpeakTranslate } from './utils/pirate_speak';\nimport { flipStringUpsideDown } from './utils/upside_down';\nlet currentLanguage = 'english';\nexport default async function AprilFoolsLanguagesPlugin() {\n    insertLanguageToggleIfNeeded();\n    insertDarkModeStylesIfNeeded();\n    storeOriginalPageContentsIfNeeded();\n    registerWindowEventListenerOnce();\n}\n///////////\n//  UI  ///\n///////////\nfunction insertLanguageToggleIfNeeded() {\n    const languageToggleId = 'primer-spec-april-fools-language-toggle';\n    const existingLanguageToggle = document.querySelector(`#${languageToggleId}`);\n    if (existingLanguageToggle) {\n        return;\n    }\n    const settingsToggleButtonContainer = document.querySelector('#primer-spec-settings-toggle');\n    const settingsToggleButton = settingsToggleButtonContainer?.querySelector('#primer-spec-settings-toggle .primer-spec-hoverable');\n    if (!settingsToggleButton || !settingsToggleButtonContainer) {\n        console.warn('Primer Spec: April Fools Languages joke: Could not find left-most topbar toggle button or settings toggle button');\n        return;\n    }\n    const languageToggle = settingsToggleButton.cloneNode(true);\n    languageToggle.id = languageToggleId;\n    languageToggle.style.paddingRight = '1em';\n    const languageIcon = languageToggle.querySelector('i.fa-cog');\n    languageIcon?.classList.remove('fa-cog');\n    languageIcon?.classList.add('fa-language');\n    settingsToggleButtonContainer.prepend(languageToggle);\n    const languageToggleBtn = languageToggle.querySelector('button');\n    languageToggleBtn?.addEventListener('click', () => toggleLanguagePopover());\n}\nconst languagePopoverId = 'primer-spec-april-fools-language-popover';\nfunction toggleLanguagePopover(opts) {\n    const existingPopover = document.querySelector(`#${languagePopoverId}`);\n    if (existingPopover) {\n        existingPopover.remove();\n    }\n    else if (opts == null || !opts.doNotOpen) {\n        const topbar = document.querySelector('header.primer-spec-topbar');\n        topbar?.appendChild(JSXDom.h(\"div\", { id: languagePopoverId, class: \"Popover position-absolute\", style: \"right: 8em; pointer-events: auto;\" },\n            JSXDom.h(\"div\", { class: \"Popover-message Popover-message--right-top p-4 mr-2 Box color-shadow-large\" },\n                JSXDom.h(\"button\", { class: \"btn-link position-absolute primer-spec-hoverable\", style: \"top: 0.25em; right: 0.5em; font-size: 20px;\", onClick: () => toggleLanguagePopover() },\n                    JSXDom.h(\"i\", { class: \"fas fa-times\" })),\n                JSXDom.h(\"h4\", { class: \"mb-2\" }, \"Change this page's \\\"language\\\"\"),\n                JSXDom.h(\"p\", null, \"April Fools! Try reading this page in another \\\"language\\\".\"),\n                JSXDom.h(\"div\", { style: \"margin-bottom: 100px\" },\n                    JSXDom.h(\"details\", { class: \"dropdown details-reset details-overlay d-inline-block\" },\n                        JSXDom.h(\"summary\", { class: \"btn\", \"aria-haspopup\": \"true\" },\n                            JSXDom.h(\"span\", { id: `${languagePopoverId}-chosen-language` }, \"Choose language\"),\n                            JSXDom.h(\"div\", { class: \"dropdown-caret\" })),\n                        JSXDom.h(\"ul\", { class: \"dropdown-menu dropdown-menu-se\" },\n                            JSXDom.h(\"li\", null, getLanguageButton('english', 'English')),\n                            JSXDom.h(\"li\", null, getLanguageButton('pig-latin', 'Pig Latin')),\n                            JSXDom.h(\"li\", null, getLanguageButton('pirate', 'Pirate')),\n                            JSXDom.h(\"li\", null, getLanguageButton('upside-down', 'Upside Down'))))))));\n        setCurrentLanguage(currentLanguage);\n    }\n}\nfunction getLanguageButton(id, label) {\n    return (JSXDom.h(\"button\", { id: `${languagePopoverId}-${id}`, class: \"btn btn-link dropdown-item\", onClick: () => {\n            setCurrentLanguage(id);\n        } }, label));\n}\nconst DARK_MODE_STYLE_ID = 'primer-spec-april-fools-languages-dark-mode-styles';\nfunction insertDarkModeStylesIfNeeded() {\n    if (!document.querySelector(`#${DARK_MODE_STYLE_ID}`)) {\n        document.head.appendChild(JSXDom.h(\"style\", null,\n            ':root[data-theme-mode=\"dark\"] .Popover .dropdown {',\n            '  filter: invert(93%) hue-rotate(180deg);',\n            '}',\n            ':root[data-theme-mode=\"dark\"] .Popover .dropdown .dropdown-item {',\n            '  color: #24292e',\n            '}',\n            ':root[data-theme-mode=\"dark\"] .Popover .dropdown .dropdown-item:hover {',\n            '  color: #000;',\n            '}',\n            '.Popover {',\n            '  color: var(--main-text-color)',\n            '}',\n            ':root[data-theme-mode=\"dark\"] .Popover-message {',\n            '  background-color: var(--code-block-header-bg-color);',\n            '  border: 1px solid #30363d;',\n            '}',\n            ':root[data-theme-mode=\"dark\"] .Popover-message--right-top::after {',\n            '  border-left-color: #30363d;',\n            '}'));\n    }\n}\nfunction setCurrentLanguage(languageId) {\n    if (currentLanguage !== languageId) {\n        currentLanguage = languageId;\n        changePageLanguage(languageId);\n    }\n    const chosenLanguageLabel = document.querySelector(`#${languagePopoverId}-chosen-language`);\n    const chosenLanguageButton = document.querySelector(`#${languagePopoverId}-${currentLanguage}`);\n    if (chosenLanguageLabel && chosenLanguageButton) {\n        chosenLanguageLabel.innerHTML = chosenLanguageButton.innerHTML;\n    }\n    // Close the dropdown\n    document\n        .querySelector('#primer-spec-april-fools-language-popover details.dropdown')\n        ?.removeAttribute('open');\n}\nlet windowEventRegistered = false;\nfunction registerWindowEventListenerOnce() {\n    if (!windowEventRegistered) {\n        // If the user clicks outside the language popover, close the popover if it's\n        // open.\n        window.addEventListener('click', (event) => {\n            const target = event?.target;\n            if (target &&\n                target.closest('#primer-spec-april-fools-language-popover, #primer-spec-april-fools-language-toggle') == null &&\n                document.body.contains(target)) {\n                toggleLanguagePopover({ doNotOpen: true });\n            }\n        });\n        windowEventRegistered = true;\n    }\n}\n/////////////////////////////\n//  LANGUAGE CHANGE INFRA  //\n/////////////////////////////\nlet originalPageContents = null;\nfunction storeOriginalPageContentsIfNeeded() {\n    if (!originalPageContents) {\n        const mainContent = document.querySelector('main#primer-spec-preact-main-content');\n        originalPageContents = mainContent?.innerHTML ?? null;\n    }\n}\nasync function changePageLanguage(languageId) {\n    const TRANSLATOR_GETTERS = {\n        english: getEnglishTranslator,\n        'pig-latin': getPigLatinTranslator,\n        pirate: getPirateTranslator,\n        'upside-down': getUpsideDownTranslator,\n    };\n    if (originalPageContents && languageId in TRANSLATOR_GETTERS) {\n        const translatedHtml = translate(originalPageContents, await TRANSLATOR_GETTERS[languageId]());\n        setMainContentHTML(translatedHtml);\n    }\n}\nfunction setMainContentHTML(html) {\n    const mainContent = document.querySelector('main#primer-spec-preact-main-content');\n    if (!mainContent) {\n        return;\n    }\n    mainContent.innerHTML = html;\n}\nfunction translate(originalHtmlStr, translator) {\n    const translateChildNodes = (parentEl) => {\n        const newChildNodes = [...parentEl.childNodes].map((node) => {\n            if (node.nodeType == Node.TEXT_NODE) {\n                node.textContent = translator(node.textContent);\n                return node;\n            }\n            else if (node.nodeType === Node.ELEMENT_NODE) {\n                if (node.classList.contains('primer-spec-code-block') ||\n                    node.classList.contains('primer-spec-code-block-processed') ||\n                    node.classList.contains('primer-spec-mermaid-output')) {\n                    return node;\n                }\n                const newNode = node.cloneNode(true);\n                translateChildNodes(newNode);\n                return newNode;\n            }\n            return node;\n        });\n        parentEl.innerHTML = '';\n        parentEl.append(...newChildNodes);\n    };\n    const originalHtml = new DOMParser().parseFromString(originalHtmlStr, 'text/html').body;\n    translateChildNodes(originalHtml);\n    return originalHtml.innerHTML;\n}\n////////////////////////////////\n//  LANGUAGE IMPLEMENTATIONS  //\n////////////////////////////////\nfunction getEnglishTranslator() {\n    return Promise.resolve((text) => text);\n}\nasync function getPigLatinTranslator() {\n    const translator = new PigLatinizer();\n    return (text) => (text ? translator.translate(text) : text);\n}\nasync function getPirateTranslator() {\n    return (text) => (text ? pirateSpeakTranslate(text) : text);\n}\nasync function getUpsideDownTranslator() {\n    return (text) => (text ? flipStringUpsideDown(text) : text);\n}\n"],"names":["PigLatin","this","exclusions","prototype","translate","english","_split","map","_translateOne","bind","join","fragment","parts","exec","word","substring","indexOf","test","isAllCaps","toUpperCase","length","firstLetterUpped","lastChar","append","firstVowelPos","_indexOfFirstVowel","isCapitalized","consonants","toLowerCase","consonantsRepeated","substr","firstConsonantRepeated","hyphen","str","re","fragments","lastLastIndex","result","push","index","separator","lastIndex","search","exports","dictionary","address","admin","am","an","and","are","award","before","belief","between","big","bill","bills","boss","box","buddy","business","businesses","calling","canada","cash","cat","cheat","comes","comments","cool","country","dashboard","dead","disconnect","dog","dollar","dollars","dude","employee","everyone","eye","family","fee","food","for","friend","friends","go","good","grave","group","haha","hahaha","hahahaha","hand","happy","hello","hey","hi","hotel","i","internet","invalid","is","island","jail","kill","king","ladies","lady","lawyer","left","leg","logout","lol","man","manager","money","month","my","never","no","not","of","old","omg","over","page","people","person","posted","president","prison","quickly","really","relative","relatives","religion","restaurant","right","rotf","say","seconds","shipping","small","snack","soldier","sorry","spouse","state","supervisor","thief","them","to","together","treasure","was","water","we","with","work","yah","yeah","yes","you","your","yup","around","cancel","event","except","jarnuary","feburuary","march","april","june","july","august","september","october","november","december","sunday","monday","tuesday","wednesday","thursday","saturday","today","post","tweet","video","location","file","browser","code","program","dependencies","starter","translateWord","pirateWord","undefined","wordA","wordB","firstChar","slice","otherChars","applyCase","isLetter","character","flipTable","A","B","C","D","E","F","G","J","K","L","M","N","P","Q","R","T","U","V","Y","_","a","b","c","d","e","f","g","h","j","k","l","m","n","r","t","v","w","y","currentLanguage","async","AprilFoolsLanguagesPlugin","languageToggleId","document","querySelector","settingsToggleButtonContainer","settingsToggleButton","console","warn","languageToggle","cloneNode","id","style","paddingRight","languageIcon","classList","remove","add","prepend","addEventListener","toggleLanguagePopover","insertLanguageToggleIfNeeded","DARK_MODE_STYLE_ID","head","appendChild","originalPageContents","mainContent","innerHTML","storeOriginalPageContentsIfNeeded","windowEventRegistered","window","target","closest","body","contains","doNotOpen","languagePopoverId","opts","existingPopover","class","onClick","getLanguageButton","setCurrentLanguage","label","languageId","TRANSLATOR_GETTERS","getEnglishTranslator","getPigLatinTranslator","pirate","getPirateTranslator","getUpsideDownTranslator","html","setMainContentHTML","originalHtmlStr","translator","translateChildNodes","parentEl","newChildNodes","childNodes","node","nodeType","Node","TEXT_NODE","textContent","ELEMENT_NODE","newNode","originalHtml","DOMParser","parseFromString","changePageLanguage","chosenLanguageLabel","chosenLanguageButton","removeAttribute","Promise","resolve","text","translatedText","aString","last","Array","charAt","flipStringUpsideDown"],"sourceRoot":""}